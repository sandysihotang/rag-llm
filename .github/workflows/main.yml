name: RAG LLM Project

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout branch
        uses: actions/checkout@v2

      - name: Set up Docker
        uses: docker/setup-buildx-action@v1
        with:
          version: latest
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}  # Store Docker Hub username in GitHub secrets
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create .env file with secrets
        run: |
          # Create the .env file using 'touch' and add secrets using 'echo'
          touch .env  # Create an empty .env file
          echo "${{ secrets.ENV }}" >> .env  # Add DB_HOST secret
          cat .env  # Output the .env file to verify

      - name: Install Docker Compose
        run: |
          sudo curl -L "https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          docker-compose --version  # Verify Docker Compose installation

      - name: Build Docker image
        run: |
          docker-compose -f docker-compose.yaml build

      - name: Push Docker image to Docker Hub
        run: |
          docker-compose -f docker-compose.yaml push
  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
    - name: Checkout code
      uses: actions/checkout@v2  # Check out your code

    - name: Set up SSH for deployment
      uses: webfactory/ssh-agent@v0.5.3  # Set up SSH agent in GitHub Actions
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}  # Use the private SSH key from GitHub Secrets

    - name: Deploy to server via SSH
      run: |
        sshpass -p "${{ secrets.PASSWORD_SSH }}" ssh -o StrictHostKeyChecking=no root@47.84.71.54 << 'EOF'
          cd rag-llm  # Navigate to your project directory on the server
          docker-compose down
          docker-compose -f docker-compose.yaml pull
          docker-compose -f docker-compose.yaml up -d
        EOF
  